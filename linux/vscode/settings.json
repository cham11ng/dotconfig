{
  "breadcrumbs.enabled": true,
  "editor.cursorBlinking": "expand",
  "editor.fontFamily": "Fira Code",
  "editor.fontLigatures": true,
  "editor.fontSize": 12,
  "editor.formatOnSave": false,
  "editor.formatOnPaste": false,
  "editor.lineHeight": 28,
  "editor.renderControlCharacters": false,
  "editor.suggestSelection": "first",
  "editor.formatOnSaveMode": "modifications",
  "editor.snippetSuggestions": "top",
  "editor.wordWrapColumn": 120,
  "editor.tabSize": 2,
  "editor.rulers": [
    80,
    120
  ],
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 0,
  "workbench.colorTheme": "Default Light Modern",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.iconTheme": "vscode-icons",
  "workbench.startupEditor": "none",
  "workbench.statusBar.visible": true,
  "workbench.settings.editor": "json",
  "workbench.editor.enablePreview": false,
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "extensions.ignoreRecommendations": false,
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.fontSize": 12,
  "diffEditor.wordWrap": "off",
  "diffEditor.ignoreTrimWhitespace": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true
  },
  "go.toolsManagement.autoUpdate": true,
  "typescript.preferences.quoteStyle": "single",
  "javascript.preferences.quoteStyle": "single",
  "redhat.telemetry.enabled": true,
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform"
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "cSpell.language": "en,lorem",
  "cSpell.userWords": [
    "camelcase",
    "camelize",
    "Chamling",
    "laudio",
    "pytest",
    "Sagar",
    "sagarchamling",
    "sftp",
    "varchar"
  ],
  "files.exclude": {
    "**/.git": true,
    "**/.pyc": true,
    "**/__pycache__": true,
    "**/.cache": true,
    "**/.pytest": true,
    "**/.pytest_cache": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true
  },
  "cSpell.enableFiletypes": [
    "plaintext"
  ],
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook",
    "*.pdf": "default"
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "name": "One Dark italic",
        "scope": [
          "comment",
          "entity.other.attribute-name",
          "keyword",
          "markup.underline.link",
          "storage.modifier",
          "storage.type",
          "string.url",
          "variable.language.super",
          "variable.language.this"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "name": "One Dark italic reset",
        "scope": [
          "keyword.operator",
          "keyword.other.type",
          "storage.modifier.import",
          "storage.modifier.package",
          "storage.type.built-in",
          "storage.type.function.arrow",
          "storage.type.generic",
          "storage.type.java",
          "storage.type.primitive"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  // The path to the `bun` executable.
  "bun.runtime": "/home/cham11ng/.bun/bin/bun",
  // If support for Bun should be added to the default "JavaScript Debug Terminal".
  "bun.debugTerminal.enabled": true,
  // If the debugger should stop on the first line of the program.
  "bun.debugTerminal.stopOnEntry": false,
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false,
    "python": true,
    "makefile": false
  },
  "gitlens.keymap": "none",
  "terminal.integrated.shell.osx": "/bin/zsh",
  "todo-tree.tree.showScanModeButton": false,
  "todo-tree.highlights.defaultHighlight": {
    "icon": "alert",
    "type": "text",
    "foreground": "black",
    "background": "grey",
    "opacity": 50,
    "iconColour": "blue"
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "check",
      "type": "text"
    },
    "FIXME": {
      "foreground": "#d1c3c2",
      "iconColour": "yellow",
      "background": "#b34a49"
    }
  },
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<leader>",
        "m"
      ],
      "commands": [
        "bookmarks.toggle"
      ]
    },
    {
      "before": [
        "<leader>",
        "b"
      ],
      "commands": [
        "bookmarks.list"
      ]
    },
    {
      "before": [
        "<leader>",
        "d"
      ],
      "after": [
        "d",
        "d"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        ":nohl"
      ]
    },
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    }
  ],
  "autoDocstring.docstringFormat": "sphinx",
  "autoDocstring.startOnNewLine": true,
  "autoDocstring.guessTypes": true,
  "autoDocstring.generateDocstringOnEnter": true
}